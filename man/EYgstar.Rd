% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/5valueodtr.R
\name{EYgstar}
\alias{EYgstar}
\title{Estimation of E[Ygstar]}
\usage{
EYgstar(
  W,
  V,
  A,
  Y,
  g.SL.library,
  QAW.SL.library,
  blip.SL.library,
  metalearner,
  risk.type,
  grid.size = 100,
  VFolds = 10,
  kappa = NULL,
  QAW.fun = NULL,
  family = NULL,
  contrast = NULL,
  cs_to_try = NULL,
  alphas_to_try = NULL
)
}
\arguments{
\item{W}{Data frame of observed baseline covariates}

\item{V}{Data frame of observed baseline covariates (subset of W) used to design the ODTR}

\item{A}{Vector of treatment}

\item{Y}{Vector of outcome (continuous or binary)}

\item{g.SL.library}{SuperLearner library for estimating txt mechanism}

\item{QAW.SL.library}{SuperLearner library for estimating outcome regression}

\item{blip.SL.library}{SuperLearner library for estimating the blip}

\item{metalearner}{Discrete ("discrete"), blip-based ("blip").}

\item{risk.type}{Risk type in order to pick optimal combination of coefficients to combine the candidate algorithms. For (1) MSE risk use "CV MSE"; for (2) -E[Ygstar] risk use "CV IPCWDR" (for -E[Ygstar] estimated using double-robust IPTW) or "CV TMLE" (for -E[Ygstar] estimates using TMLE); (3) For the upper bound of the CI of -E[Ygstar] use "CV TMLE CI"}

\item{grid.size}{Grid size for \code{\link[hitandrun:simplex.sample]{simplex.sample()}} function to create possible combinations of coefficients}

\item{VFolds}{Number of folds to use in cross-validation. Default is 10.}

\item{kappa}{For ODTR with resource constriants, kappa is the proportion of people in the population who are allowed to receive treatment. Default is \code{NULL}.}

\item{QAW.fun}{True outcome regression E[Y|A,W]. Useful for simulations. Default is \code{NULL}.}

\item{family}{either "gaussian" or "binomial". Default is null, if outcome is between 0 and 1 it will change to binomial, otherwise gaussian}

\item{contrast}{An integer to contrast Psi = E[Ygstar]-E[Ycontrast] for CV-TMLE. For example, 0 will contrast Psi = E[Ygstar]-E[Y0]. Default is \code{NULL}.}

\item{cs_to_try}{Constants for SL.blip.c}

\item{alphas_to_try}{Convex combination alphas for SL.blip.alpha}

\item{QAW}{True outcome regression E[Y|A,W]. Useful for simulations. Default is \code{NULL}.}

\item{odtr.obj}{An object from the odtr function that estimates the odtr.}
}
\value{
If the true Qbar function is specified, the output will be a vector of point estimates of E[Ygstar] and their respective confidence intervals. This will be for both the estimated optimal rule and the true optimal rule. Performance results on the optimal rule will also be output: proportion of people treated under ODTR, proportion of times the estimated rule matches the optimal rule, the mean outcome under the estimated optimal rule under the true mean outcome function, and the mean outcome under the estimated optimal rule under the sample-specific true mean outcome.

If the true Qbar is not specified, return:
\describe{
  \item{EYgstar_estimates}{Point estimates and confidence intervals for E[Ygstar], using the unadjusted mean outcome for the people who received the optimal rule, g-computation, IPTW, IPTW-DR, TMLE}
  \item{SL.odtr}{SuperLearner list. See \code{SL.blip} or \code{SL.vote} documentation.}
}
}
\description{
Given a W, A, Y dataset, this function will compute the estimated ODTR using SuperLearner. If a Qbar function is provided that computes the true E[Y|A,W] (e.g., if simulating), the function will also return the true treatment under the optimal rule and other metrics of evaluating the estimated optimal rule's performance. Then, it will estimate E[Ygstar] using g-computation, IPTW, IPTW-DR, TMLE, and CV-TMLE. Follows the framework of Luedtke and van der laan, 2015 and 2016.
}
